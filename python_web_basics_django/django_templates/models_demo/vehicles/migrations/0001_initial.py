# Generated by Django 5.0.4 on 2024-05-02 08:53

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('production_date', models.DateField()),
                ('engine_type', models.CharField(choices=[('Diesel', 'Diesel'), ('Petrol', 'Petrol'), ('Electric', 'Electric')], max_length=8)),
                ('horse_power', models.IntegerField(validators=[django.core.validators.MinValueValidator(60), django.core.validators.MaxValueValidator(900)])),
                ('mileage', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
            ],
            options={
                'ordering': (['brand', 'model'],),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('production_date', models.DateField()),
                ('engine_type', models.CharField(choices=[('Diesel', 'Diesel'), ('Petrol', 'Petrol'), ('Electric', 'Electric')], max_length=8)),
                ('horse_power', models.IntegerField(validators=[django.core.validators.MinValueValidator(60), django.core.validators.MaxValueValidator(900)])),
                ('mileage', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
            ],
            options={
                'ordering': (['brand', 'model'],),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Motorcycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('production_date', models.DateField()),
                ('engine_type', models.CharField(choices=[('Diesel', 'Diesel'), ('Petrol', 'Petrol'), ('Electric', 'Electric')], max_length=8)),
                ('horse_power', models.IntegerField(validators=[django.core.validators.MinValueValidator(60), django.core.validators.MaxValueValidator(900)])),
                ('mileage', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
            ],
            options={
                'ordering': (['brand', 'model'],),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('production_date', models.DateField()),
                ('engine_type', models.CharField(choices=[('Diesel', 'Diesel'), ('Petrol', 'Petrol'), ('Electric', 'Electric')], max_length=8)),
                ('horse_power', models.IntegerField(validators=[django.core.validators.MinValueValidator(60), django.core.validators.MaxValueValidator(900)])),
                ('mileage', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
            ],
            options={
                'ordering': (['brand', 'model'],),
                'abstract': False,
            },
        ),
    ]
